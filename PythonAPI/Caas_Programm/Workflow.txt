cd C:\Carla\PythonAPI\Caas_Programm

py -3.7 Spawn_Car_in_Position.py
py -3.7 Spawn_Car.py
py -3.7 Get_Waypoint.py
py -3.7 Drive_controller.py


ALL in One:

---
py -3.7 CaaS_All_in_One.py
py -3.7 CaaS_All_in_One_Transport_Request.py
---

---
py -3.7 CaaS_All_in_One_with_Destination.py
---

--
py -3.7 Caas_recieve_actor_request.py
py -3.7 Caas_send_actor_data.py
--

NEW (18.06.2021):
py -3.7 CaaS_All_in_One.py
py -3.7 Caas_send_actor_data.py
py -3.7 Caas_recieve_actor_request.py


Next:
- Transport User


MQTT Broker
- Send Brian Userinformation
- Send Brian Request of Person
	- Brian gibt Info welches Auto am nähesten steht


python paho -> Library to resieve MQTT Messages
http://www.hivemq.com/demos/websocket-client/?


!Send: Cars!
Send: Persons
Request: Where is Person

topic/car/data -> Datenübertragung an Brian  | { "name": "Lambo", "message": "need_car", "state": "not_availabe", "location": "X", "distance": "5" }
					       { "name": "Lambo", "message": "need_car", "state": "not_availabe", "location": "X", "distance": "5" }
topic/person/data -> Datenübertragung an Brian 

topic/transport/request -> Brian sagt welche Person will vom welchem Auto abgeholt werden und wohin. { "vehicle1_id": "86", "vehicle2_id": "87", "destination": "100" }


